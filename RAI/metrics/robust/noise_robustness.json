{
    "name": "noise_robustness",
    "display_name": "Robustness to Noise Metrics",
    "compatibility": {"task_type": null,
                      "data_type": [],
                      "output_requirements": [],
                      "dataset_requirements": []},
    "dependency_list": [],
    "tags": ["robustness", "Noise"],
    "complexity_class": "linear",
    "metrics": {
        "certified-adversarial-noise": {
            "display_name": "Certified Adversarial Robustness with Additive Noise Score",
            "type": "numeric",
            "has_range": false,
            "range": [null, null],
            "explanation": "https://github.com/Bai-Li/STN-Code"
        },
        "robust-signal-noise-ratio": {
            "display_name": "Robust SNR",
            "type": "numeric",
            "has_range": false,
            "range": [null, null],
            "explanation": "Signal-to-Noise Ratio: A Robust Distance Metric for Deep Metric Learning . https://kevinmusgrave.github.io/pytorch-metric-learning/distances/#snrdistance"
        },
        "decision-curve-upper-bound": {
            "display_name": "Robustness of classifiers: from adversarial to random noise score",
            "type": "numeric",
            "has_range": false,
            "range": [null, null],
            "explanation": "Robustness of classifiers: from adversarial to random noise. Requires hand coding their math."
        },
        "decision-curve-lower-bound": {
            "display_name": "Robustness of classifiers: from adversarial to random noise score",
            "type": "numeric",
            "has_range": false,
            "range": [null, null],
            "explanation": "Robustness of classifiers: from adversarial to random noise. Requires hand coding their math"
        },

        "added-noise": {
            "display_name": "Accuracy After Noise",
            "type": "numeric",
            "has_range": false,
            "range": [null, null],
            "explanation": "Add Label Noise / Noise proportional to stdev and and compare accuracy?"
        }
    }
}